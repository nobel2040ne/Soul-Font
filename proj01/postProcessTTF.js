#!/usr/bin/env node
const fs = require('fs');
const path = require('path');
const svg2ttf = require('svg2ttf');
const opentype = require('opentype.js');

// 커맨드라인 인자로 userId와 베이스 디렉토리를 받습니다.
const [ , , userId, baseDir = __dirname ] = process.argv;
if (!userId) {
  console.error('Usage: node postProcessTTF.js <userId> [<baseDir>]');
  process.exit(1);
}

const svgFontPath   = path.join(baseDir, 'FONT', userId, 'svg_fonts', 'font_temp.svg');
const ttfOutputPath = path.join(baseDir, 'FONT', userId, 'ttf_fonts', `user_font_${userId}.ttf`);
const finalTTFPath  = path.join(baseDir, 'FONT', userId, 'ttf_fonts', `user_font_${userId}_final.ttf`);

async function run() {
  try {
    // 1) SVG → TTF
    const svgFontData = await fs.promises.readFile(svgFontPath, 'utf8');
    const ttfBuffer    = Buffer.from(svg2ttf(svgFontData, {}).buffer);
    await fs.promises.writeFile(ttfOutputPath, ttfBuffer);
    console.log(`[postProcess] TTF generated at ${ttfOutputPath}`);

    // 2) Metadata 후처리
    const font = await opentype.load(ttfOutputPath);

    // 메타데이터 강화
    font.names.fontFamily        = { en: `user_font_${userId}` };
    font.names.fullName          = { en: `user_font_${userId} Regular` };
    font.names.postScriptName    = { en: `user_font-${userId}-Regular` };
    font.names.preferredSubfamily= { en: 'Regular' };
    font.names.version           = { en: 'Version 1.000' };
    font.names.manufacturer      = { en: 'Generated by Soul Font' };
    font.names.designer          = { en: 'nobel and lukple' };
    font.names.description       = { en: `A custom font generated for user ${userId}.` };
    font.names.license           = { en: 'Personal & non-commercial use.' };
    font.names.licenseURL        = { en: 'nobel2040ne@sasa.hs.kr' };
    font.names.copyright         = { en: `Copyright © 2025, user_font_${userId}` };
    font.names.trademark         = { en: `user_font_${userId} is a trademark.` };

    // 매트릭스 & OS/2 설정
    font.ascender    = 900;
    font.descender   = -200;
    font.unitsPerEm  = 1000;
    Object.assign(font.tables.os2, {
      usWeightClass: 400,
      usWidthClass: 5,
      fsSelection: 0x04,
      ulCodePageRange1: 1,
      ulCodePageRange2: 0,
      ulCodePageRange3: 0,
      ulCodePageRange4: 0,
      ulCharRange: [0x00000001,0,0,0],
      achVendID: 'XXXX'
    });

    // 3) 파일 저장 & 임시 SVG 삭제
    const finalBuffer = Buffer.from(font.toArrayBuffer());
    await fs.promises.writeFile(finalTTFPath, finalBuffer);
    console.log(`[postProcess] Final TTF saved at ${finalTTFPath}`);

    await fs.promises.unlink(svgFontPath);
    console.log(`[postProcess] Cleaned up ${svgFontPath}`);

    process.exit(0);
  } catch (err) {
    console.error('❌ postProcess error:', err);
    process.exit(1);
  }
}

run();
